import cv2
import numpy as np

def hough_lines():
    src = cv2.imread(r"C:\tortoisegit_opencv\ch07\building.jpg", cv2.IMREAD_GRAYSCALE)
    if src is None: return
    edge = cv2.Canny(src, 50, 150)
    lines = cv2.HoughLines(edge, 1, np.pi/180, 250)
    dst = cv2.cvtColor(edge, cv2.COLOR_GRAY2BGR)
    for rho,theta in [l[0] for l in lines]:
        a,b = np.cos(theta), np.sin(theta)
        x0,y0 = rho*a,rho*b; alpha=1000
        pt1 = (int(x0-alpha*b),int(y0+alpha*a))
        pt2 = (int(x0+alpha*b),int(y0-alpha*a))
        cv2.line(dst, pt1, pt2, (0,0,255), 2, cv2.LINE_AA)
    cv2.imshow("src", src); cv2.imshow("dst", dst)
    cv2.waitKey(0); cv2.destroyAllWindows()

def hough_line_segments():
    src = cv2.imread(r"C:\tortoisegit_opencv\ch07\building.jpg", cv2.IMREAD_GRAYSCALE)
    if src is None: return
    edge = cv2.Canny(src, 50, 150)
    lines = cv2.HoughLinesP(edge,1,np.pi/180,160,50,5)
    dst = cv2.cvtColor(edge, cv2.COLOR_GRAY2BGR)
    for x1,y1,x2,y2 in lines[:,0]: cv2.line(dst,(x1,y1),(x2,y2),(0,0,255),2,cv2.LINE_AA)
    cv2.imshow("src", src); cv2.imshow("dst", dst)
    cv2.waitKey(0); cv2.destroyAllWindows()

def hough_circles():
    src = cv2.imread(r"C:\tortoisegit_opencv\ch07\coins.png", cv2.IMREAD_GRAYSCALE)
    if src is None: return
    blurred = cv2.blur(src,(3,3))
    circles = cv2.HoughCircles(blurred,cv2.HOUGH_GRADIENT,1,50,param1=150,param2=30)
    dst = cv2.cvtColor(src,cv2.COLOR_GRAY2BGR)
    if circles is not None:
        for c in np.uint16(np.around(circles[0,:])):
            cv2.circle(dst,(c[0],c[1]),c[2],(0,0,255),2,cv2.LINE_AA)
    cv2.imshow("src", src); cv2.imshow("dst", dst)
    cv2.waitKey(0); cv2.destroyAllWindows()

if __name__ == "__main__":
    hough_lines()
    hough_line_segments()
    hough_circles()
